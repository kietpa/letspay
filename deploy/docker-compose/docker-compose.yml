services:
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: letspay # creates DB with this name at init
      POSTGRES_USER: letsuser # superuser
      POSTGRES_PASSWORD: letspassword
      PGDATA: /data/letspay
    volumes:
      - db:/data/postgres
    ports:
      - "5372:5432"
    networks:
      - db
      - monitoring
    restart: unless-stopped
  redis:
    container_name: letspay-redis
    image: redis:alpine
    command: redis-server --requirepass letsredis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - db
    restart: unless-stopped

  api-gateway:
    build:
      context: ../../
      dockerfile: services/api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - payment-service
      - rabbitmq
    env_file:
      - ../../.env
    labels:
      logging: "promtail"
    networks:
      - db
    restart: unless-stopped

  user-service:
    build:
      context: ../../
      dockerfile: services/user/Dockerfile
    container_name: user-service
    ports:
      - "8001:8080"
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - ../../.env
    labels:
      logging: "promtail"
    networks:
      - db
    restart: unless-stopped

  payment-service:
    build:
      context: ../../
      dockerfile: services/payment/Dockerfile
    container_name: payment-service
    ports:
      - "8002:8080"
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - ../../.env
    labels:
      logging: "promtail"
    networks:
      - db
    restart: unless-stopped
  # Monitoring stack
  loki:
    image: grafana/loki:3.3.2
    command: -config.file=/etc/loki/local-config.yaml
    volumes: [./data/loki:/loki]
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:3.3.2
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - ../../deploy/config/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: [loki]
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:11.4.0
    ports: [3000:3000]
    volumes:
      - ../../deploy/config/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - monitoring

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - db

networks:
  db:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  db:
    driver: local
  redis_data:
    driver: local

    